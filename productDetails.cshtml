@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Product Details";

    var db = Database.Open("BuSushi");
    var Id = UrlData[0].AsInt();
    
    Customer currentCustomer = _common.getCustomer();
    
    var itemType = _common.getItemTypeByProductId(Id);
    var foodItem = false;
    var sushiItem = false;
    var rollItem = false;

    Product currentItem;
    if(string.Equals(itemType, "Roll")){
        currentItem = _common.getRollProduct(Id);
        rollItem = true; sushiItem = true; foodItem = true;
    } else if(string.Equals(itemType, "Sushi")){
        currentItem = _common.getSushiProduct(Id);
        sushiItem = true; foodItem = true;
    } else if(string.Equals(itemType, "Food")){
        currentItem = _common.getFoodProduct(Id);
        foodItem = true;
    } else{currentItem = new Product(Id);}

    /* Product is empty, send back to product list */
    if(currentItem == null || currentItem.discontinued == true){
        Response.Redirect("~/products/");
    }

    /* Set the page title to the current product's name */
    Page.Title = currentItem.Name;

    /* Instantiate CartItem (to be able to use OptionTotal, etc) */
    CartItem cartItem = new CartItem();
    
    if(currentItem.isSpecial()){
        cartItem.CIDiscount = _common.getDiscountByCode("SPECIAL");
        cartItem.CIDiscount.getDiscountDollar(currentItem.Price);
    }

    /* Get total option cost for product */
    if(rollItem){foreach(OrderOption o in ((Roll)currentItem).Options){cartItem.OptionsTotal += o.OptionPrice;}}
    //currentItem.Price += cartItem.OptionsTotal;

    // Setup validation
    Validation.Add("orderQty",
        Validator.Required("Please enter a quantity. For large orders please check our catering page."),
        Validator.Range(1, 6)
    );
    
    /* Validation is good and IsPost and we have a user */
    if (IsPost && currentCustomer.hasId() && Validation.IsValid()) {
        /* Set Data */
        
        cartItem.fkCartId = currentCustomer.UserCart.pkCartId;
        cartItem.CIProduct = currentItem;
        cartItem.Instructions = Request["instructions"];
        cartItem.Qty = Request["orderQty"].AsInt();
        cartItem.Price = cartItem.CIProduct.Price;


        if(currentItem.isSpecial()){
            cartItem.CIDiscount.getDiscountDollar(cartItem.CIProduct.Price);
        }

        /*
        if(!String.IsNullOrEmpty(Request["discountCode"])){
            Discount d = _common.getDiscountByCode(Request["discountCode"]);
            if(d.hasId()){
                d.getDiscountDollar(cartItem.CIProduct.Price);
                if(cartItem.CIDiscount.hasId() && cartItem.CIDiscount.DiscountDollar < d.DiscountDollar){cartItem.CIDiscount = d;}
            }
        }
        */
        cartItem.Price -= cartItem.CIDiscount.DiscountDollar;

        /* Add options */
        if(!Request["rollOptions"].IsEmpty()){
            foreach (var selection in Request["rollOptions"].Split(',')){
                OrderOption o = new OrderOption(selection.AsInt());
                cartItem.Options.Add(new OrderOption(selection.AsInt()));
                cartItem.Price += o.OptionPrice;
            }
        } /* No options were chosen */

        if(currentItem.ProductOptions.Any()){
            cartItem.ProductOptions.Add(new ProductOption(Request["pOption"].AsInt()));
        }

        cartItem.ItemProfit = cartItem.calculateProfit();

        /* Add item to cart */
        cartItem.addCartItem();

        /* Send user to their cart */
        Response.Redirect("~/reviewCart");
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        var productPrice = @{<text>@(currentItem.Price - cartItem.CIDiscount.DiscountDollar)</text>;}
        var options = [];
        /* If options already exist, assign them to the array */
        @if(rollItem){foreach(OrderOption op in ((Roll)currentItem).Options){
            <text>options.push({ Id: '@op.pkOptionId', Name: '@op.OptionName', Price: @op.OptionPrice });</text>
        }}

        $("#orderQty").keyup(function () {
            getCost();
        });
        $(".roll-option").change(function () {
            var optionId = $(this).parent("span").find(".option-id").val();
            var optionName = $(this).parent("span").find(".option-name").val();
            var optionPrice = parseFloat($(this).parent("span").find(".option-price").val());

            /* User has checked an ingredient */
            if ($(this).is(':checked')) {
                /* Add option to the array */
                options.push({ Id: optionId, Name: optionName, Price: optionPrice });
            }
            /* User has unchecked an ingredient */
            else if (!$(this).is(':checked')) {
                /* Remove ingredient from the array */
                removeArrayItem(options, optionId);
            }
            getCost();
        });



        function getCost() {
            var qty = $("#orderQty").val();

            var subTotal = productPrice * qty;
            /* Get cost of extra options */
            var optionCost = 0;
            for (i = 0; i < options.length; i++) {
                subTotal += (options[i].Price * qty);
                optionCost += options[i].Price;
            }

            var optionString = "$" + (optionCost * qty);
            if (qty > 1) { optionString += " ($" + optionCost.toFixed(2) + "/ea)"; }
            $(".options-total").html(optionString);

            var totalString = "$" + subTotal.toFixed(2);
            if (qty > 1) { totalString += " ($" + (productPrice + optionCost).toFixed(2) + "/ea)"; }

            
            $("#orderPrice").html(totalString);
        }
    });
</script>

<section id="productDetails">
    <header>
        <h3>@currentItem.Name
            @{if (currentItem.JPName != null){<text> (@currentItem.JPName)</text>}}
            @if(Roles.IsUserInRole("Administrator") || Roles.IsUserInRole("Master")){
                <a href="@Href("~/admin/modifyProduct", currentItem.pkProductId)" class="edit">(Edit)</a>
            }
            @if(currentItem.isSpecial()){
                <span class="special">Special</span>
            }
        </h3>

        <nav>
            <a href="~/products/">Products</a>
            @if(rollItem){
                <text>
                    &rarr; <a href="~/products/food/">Food</a>
                    &rarr; <a href="~/products/sushi/">Sushi</a>
                    &rarr; <a href="~/products/rolls/">Rolls</a>
                </text>
            }else if(sushiItem){
                <text>
                    &rarr; <a href="~/products/food/">Food</a>
                    &rarr; <a href="~/products/sushi/">Sushi</a>
                </text>
            }else if(foodItem){
                <text>&rarr; <a href="~/products/food/">Food</a></text>
            }
        </nav>
    </header>
    
    <form action="" method="post">
    @Html.ValidationSummary(excludeFieldErrors: true)
        <img class="product-image order-image" src="@currentItem.imgURL" alt="Image of @currentItem.Name" />

        <ul>
            @if(foodItem){
                if(sushiItem){
                    if(rollItem){
                        <li>
                            <p class="title">Roll Type:</p>
                            <p class="detail">@(((Roll)currentItem).RType.RollTypeName)</p>
                        </li>

                        <li class="ingredients">
                            <p class="title">Ingredients (top):</p>
                                @{
                                    if(((Roll)currentItem).SecondaryIngredients.Count >= 1){
                                        try{
                                            foreach(var i in ((Roll)currentItem).SecondaryIngredients){<div class="detail">@i.IngredientName</div>}
                                        }catch(Exception e){}
                                    }else{<div class="detail">(none)</div>}
                                }
                        </li>
                    }
                }

                <li class="insideIngredients">
                    <p class="title">Ingredients @if(rollItem){<text>(inside)</text>}:</p>
                    @{
                        if(((Food)currentItem).Ingredients.Count >= 1){
                            try{
                                foreach(var i in ((Food)currentItem).Ingredients){
                                    <div class="detail">
                                        @i.IngredientName
                                        @if(!i.IngredientAltName.IsEmpty()){<text>(@i.IngredientAltName)</text>}
                                    </div>
                    
                                }
                            } catch(Exception e){}
                        } else{<div class="detail">(none)</div>}
                    }
                </li>
            }

            <li class="itemPrice">
                <span class="bold">Price:</span>
                @if(currentItem.isSpecial()){
                    <span id="itemPrice" class="price strikethrough">@string.Format("{0:c}", currentItem.Price)</span>
                    <span id="itemPriceSpecial" class="price">@string.Format("{0:c}", currentItem.Price - cartItem.CIDiscount.DiscountDollar)</span>
                }else{<span id="itemPrice" class="price">@string.Format("{0:c}", currentItem.Price)</span>}
            </li>

            <li class="tags">
                @{
                    if(currentItem.Tags.Count >= 1){
                        try{
                            foreach(var t in currentItem.Tags){
                                <a href="~/products/@t.TagName/" class="tag">@t.TagName</a>
                            }
                        } catch(Exception e){}
                    }
                }
            </li>

            @if(rollItem){
                decimal optionsTotal = 0;
                <li class="options">
                    <fieldset>
                        <legend>Options (<span class="options-total">$@cartItem.OptionsTotal</span>)</legend>
                        @Helpers.OptionCheckboxes((Roll)currentItem)
                    </fieldset>
                </li>
            }
            
            @if(currentItem.ProductOptions.Any()){
                <li class="product-options">
                    @Helpers.ProductOptions(currentItem)
                </li>
            }

            <li class="quantity">
                <label for="orderQty">Qty</label>
                <input type="text" id="orderQty" name="orderQty" class="qty" value="1" @Validation.For("orderQty") />
                <!--
                    x
                    <span id="orderPrice">(at)string.Format("{0:c}", product.Price)</span>
                    =
                    <span id="orderTotal">(at)string.Format("{0:c}", quantity == 0 ? product.Price : quantity * product.Price)</span>
                -->
            </li>

            <li class="price">
                <span>Total:</span>
                @if(currentItem.isSpecial()){
                    <span id="orderPrice" class="price">@string.Format("{0:c}", (currentItem.Price + cartItem.OptionsTotal - cartItem.CIDiscount.DiscountDollar))</span>
                }else{<span id="orderPrice" class="price">@string.Format("{0:c}", (currentItem.Price + cartItem.OptionsTotal))</span>}
            </li>

            <li id="specialInstructions">
                <p>
                    <label for="instructions">Special Instructions: </label>
                    <input type="text" id="instructions" name="instructions" />
                </p>
            </li>
            @*
            <li id="discount">
                <p>
                    <label for="discountCode">Discount Code:</label>
                    <input type="text" id="discountCode" name="discountCode" />
                </p>
            </li>
            *@
            <li class="actions">
                @{
                    if(!currentCustomer.hasId()){
                        <input type="submit" value="Add to Cart" data-role="none" data-inline="true" disabled />
                        <br />
                        @Helpers.noUser("order a product")
                    } else{
                        <input type="submit" value="Add to Cart" data-role="none" data-inline="true" />
                    }
                }
            </li>

        </ul>
        
    </form>

    <div class="fb-comments" data-href="~/productDetails/@currentItem.pkProductId" data-numposts="5" data-colorscheme="light"></div>

</section>

<script type="text/javascript">
    $(function () {
        var price = parseFloat($("#orderPrice").text()).toFixed(2),
            total = $("#orderTotal"),
            orderQty = $("#orderQty");

        orderQty.change(function () {
            var quantity = parseInt(orderQty.val());
            if (!quantity || quantity < 1) {
                orderQty.val(1);
                quantity = 1;
            } else if (quantity.toString() !== orderQty.val()) {
                orderQty.val(quantity);
            }
            total.text("$" + (price * quantity).toFixed(2));
        });
    });
</script>
